## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
<<<<<<< HEAD
=======

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates
<<<<<<< HEAD
# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs
=======

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
<<<<<<< HEAD
=======

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/
<<<<<<< HEAD
# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
# NUNIT
*.VisualState.xml
TestResult.xml
=======

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c
<<<<<<< HEAD
=======

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# DNX
project.lock.json
project.fragment.lock.json
artifacts/
<<<<<<< HEAD
=======

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
<<<<<<< HEAD
# Chutzpah Test files
_Chutzpah*
=======

# Chutzpah Test files
_Chutzpah*

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb
<<<<<<< HEAD
=======

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap
<<<<<<< HEAD
# TFS 2012 Local Workspace
$tf/
# Guidance Automation Toolkit
*.gpState
=======

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user
<<<<<<< HEAD
# JustCode is a .NET coding add-in
.JustCode
# TeamCity is a build add-in
_TeamCity*
# DotCover is a Code Coverage Tool
*.dotCover
=======

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*
<<<<<<< HEAD
# MightyMoose
*.mm.*
AutoTest.Net/
# Web workbench (sass)
.sass-cache/
# Installshield output folder
[Ee]xpress/
=======

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html
<<<<<<< HEAD
# Click-Once directory
publish/
=======

# Click-Once directory
publish/

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
#*.pubxml
*.publishproj
<<<<<<< HEAD
=======

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/
<<<<<<< HEAD
=======

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets
<<<<<<< HEAD
# Microsoft Azure Build Output
csx/
*.build.csdef
# Microsoft Azure Emulator
ecf/
rcf/
=======

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
<<<<<<< HEAD
=======

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/
<<<<<<< HEAD
=======

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs
<<<<<<< HEAD
# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/
# RIA/Silverlight projects
Generated_Code/
=======

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
<<<<<<< HEAD
# SQL Server files
*.mdf
*.ldf
=======

# SQL Server files
*.mdf
*.ldf

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
<<<<<<< HEAD
# Microsoft Fakes
FakesAssemblies/
# GhostDoc plugin setting file
*.GhostDoc.xml
# Node.js Tools for Visual Studio
.ntvs_analysis.dat
# Visual Studio 6 build log
*.plg
# Visual Studio 6 workspace options file
*.opt
=======

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions
<<<<<<< HEAD
# Paket dependency manager
.paket/paket.exe
paket-files/
# FAKE - F# Make
.fake/
# JetBrains Rider
.idea/
*.sln.iml
# CodeRush
.cr/
=======

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush
.cr/

>>>>>>> 2386258986f3af40b779bc37207b62bf0c5530c2
# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc